= Usage

ShowOff is meant to be run in a ShowOff formatted repository - that means that
it has a <tt>showoff.json</tt> file and a number of sections (subdirectories) with
markdown files for the slides you're presenting.

    $ git clone (showoff-repo)
    $ cd (showoff-repo)
    $ showoff serve

If you run Showoff in the example subdirectory of ShowOff itself, it will
show an example presentation, so you can see what it's like.

You can also run <tt>showoff serve</tt> inside a section subdirectory. If there is no
<tt>showoff.json</tt> file then it will make its best guess, creating a presentation
from all `.md` files in alphabetical order in the given (or current)
directory.

== Available URL Paths

Once the showoff server is running, you can connect to it via a standard modern
web browser. The following URL paths are available for use by you and your audience.

[http://localhost:9090]
  This is the standard no-frills presentation. You can present from this if you wish
  and your audience can also browse to this using the IP or DNS name of your system.
  Press <tt>z</tt> to get hotkey help.

[http://localhost:9090/presenter]
  This view is useful for the presenter. It displays a more complete view of your
  presentation, including a full tree view of all slides and presenter notes underneath
  the slide itself. It will attempt to open a slave window that you can put on the
  projector. The slave window will follow along with the presenter window. If you have a
  popup blocker running, the slave window may not open. There is a button in the toolbar
  to manually open a new slave window in this case.

  If password protection is enabled, this view is often protected and you will need
  to authenticate to view.

  If this path is opened by a secondary device, such as a mobile browser, then it can also
  control the presentation if enabled with the <tt>Enable Remote</tt>  button. Showoff
  tries to be intelligent about which slide change updates to track.

[http://localhost:9090/onepage]
  This will generate a single page representing your entire presentation. It is primarily
  useful when a viewer has an older browser than cannot handle the transitions properly
  or is a luddite ;-) and wants to scroll rather than page.

[http://localhost:9090/onepage]
  This will generate printable version of your presentation, including any slides that
  were tagged as _printonly_. This view can be printed directly from the browser, or
  processed with any HTML-to-$thing engine.

[http://localhost:9090/supplemental/$type-name]
  Showoff has the ability to include supplemental material that are defined by special
  slide types. This URL path will allow you and/or the audience to retrieve the
  supplemental materials. This is most often used to generate printed material ahead
  of time rather than during the presentation itself.

== Presenter View Tools

The presenter view is broken into several areas with tools that are mostly self explanatory. Nevertheless, I'll summarize their usage.

=== Toolbar

This is the black toolbar across the top of the presenter view. It has several important
tools that you should be familiar with.

[Slide Name]
  This is the name of the current slide. The name is derived from the filename that is
  used to generate the slide, so is exponentially more useful than a slide number when
  correlating slide content with the source file used to generate it.

[Open Slave Window]
  Opens a new slave window or attempts to reconnect to an existing window. Useful
  when a popup blocker interferes.

[Generate PDF]
  A link to the <tt>PDFKit</tt> generated PDF file.

[Single Page]
  Loads up all slides as a single monolithic page. Useful for printing or when an
  ancient browser is used.

=== Presenter Tools

[Slideshow Tree]
  On the left side of the browser window is a tree like view of the presentation. Each subsection is
  displayed at the top level. Click on any of these subsections and it will expand to list all the
  slides in that section, or collapse again. Click on any slide name and the presentation will
  immediately jump to that slide.

=== Presenter Information

[Notes]
  Just displays all presenter nodes, including any markup, syntax highlighting, etc.

== Hotkeys

The following hotkeys are available for usage while viewing the slideshow.

[z, ?] Toggle help. This shows a reference table on screen.
[space, →] Advance to the next slide.
[shift-space, ←] Move to previous slide.
[d] Toggle debug mode. This will show information including the keys pressed and the content filename that is used to generate the current slide in the footer area.
[## <return>] Go to slide #. Type a number and press <return> and you will immediately jump to that slide.
[r] Reload slides. This will reload your presentation as you generate or refine content.
[n] Toggle notes. This will place the first line of text from the slide notes in the footer.

= Command Line Usage

== <tt>showoff help [command]</tt>

Shows list of commands or help for one command


== <tt>showoff heroku heroku_name</tt>

Setup your presentation to serve on Heroku

Creates the Gemfile and config.ru file needed to push a showoff pres to heroku.  It will then run heroku create for you to register the new project on heroku and add the git remote for you.  Then all you need to do is commit the new created files and run <tt>git push heroku</tt> to deploy.


== <tt>showoff github</tt>

Generates a static version of your site and puts it in a gh-pages branch for static serving on GitHub.

Options are specified *after* the command.

[<tt>-f, --force</tt>] force overwrite of existing Gemfile/.gems and config.ru files if they exist
[<tt>-g, --dotgems</tt>] Use older-style .gems file instead of bundler-style Gemfile
[<tt>-p, --password=arg</tt>] add password protection to your heroku site


== <tt>showoff serve </tt>

Serves the showoff presentation in the current directory

Options are specified *after* the command.

[<tt>-f, --pres_file=arg</tt>] Presentation file <i>(default: <tt>showoff.json</tt>)</i>
[<tt>-h, --host=arg</tt>] Host or ip to run on <i>( default: <tt>localhost</tt>)</i>
[<tt>-p, --port=arg</tt>] Port on which to run <i>( default: <tt>9090</tt>)</i>


== <tt>showoff static name</tt>

Generate static version of presentation

= Printable Output

To generate printable output or a PDF via your browser rendering engine of choice, simply browse to
the <tt>/onepage</tt> view and print the page using your browser's native print function. You may
also use a rendering engine such as PrinceXML[http://www.princexml.com] to print this page to a PDF.

If your browser doesn't generate acceptable output, Showoff can produce a PDF version using the
<tt>wkhtmltopdf</tt> rendering engine.

To do this, you must install a few things first:

    gem install pdfkit

You'll then need to install a version of <tt>wkhtmltopdf</tt> available at the {wkhtmltopdf repo}[http://code.google.com/p/wkhtmltopdf/wiki/compilation] (or <tt>brew install wkhtmltopdf</tt> on a mac) and make sure that <tt>wkhtmltopdf</tt> is in your path:

    export $PATH="/location/to/my/wkhtmltopdf/0.9.9:$PATH"


Then restart showoff, and navigate to <tt>/pdf</tt> (e.g. http://localhost:9090/pdf) of your presentation and a PDF will be generated with the browser.

= Shell Auto Completion

== ZSH completion
You can complete commands and options in ZSH, by installing a script:

    mkdir -p $HOME/.zsh/Completion
    cp script/_showoff $HOME/.zsh/Completion
    echo 'fpath=(~/.zsh/Completion $fpath)' >> $HOME/.zshrc

== <tt>bash</tt> completion

You can complete commands for showoff by putting the following in your <tt>.bashrc</tt> (or whatever
you use when starting <tt>bash</tt>):

    complete -F get_showoff_commands
    function get_showoff_commands()
    {
        if [ -z $2 ] ; then
            COMPREPLY=(`showoff help -c`)
        else
            COMPREPLY=(`showoff help -c $2`)
        fi
    }

You can also install that as an executable script such as <tt>/etc/bash_completion.d/showoff</tt>.
